{
  "Comment": "Jaunt Data Scout v2 orchestrator for city discovery with maps and web paths",
  "StartAt": "Initialize",
  "TimeoutSeconds": 21600,
  "States": {
    "Initialize": {
      "Type": "Pass",
      "ResultPath": "$.orchestrator",
      "Result": {
        "run_id": "$$.Execution.Id",
        "start_time": "$$.State.EnteredTime"
      },
      "Next": "DiscoverWebSources"
    },
    "DiscoverWebSources": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "InputPath": "$",
      "ResultPath": "$.web_sources",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 2, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.DiscoverWebSources", "Next": "ToDLQOrContinue"}
      ],
      "Next": "DiscoverTargets"
    },
    "DiscoverTargets": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.targets",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 2, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.DiscoverTargets", "Next": "ToDLQOrContinue"}
      ],
      "Next": "SeedPrimaries"
    },
    "SeedPrimaries": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.primaries",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 2, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.SeedPrimaries", "Next": "ToDLQOrContinue"}
      ],
      "Next": "ExpandNeighbors"
    },
    "ExpandNeighbors": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.neighbors",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 2, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.ExpandNeighbors", "Next": "ToDLQOrContinue"}
      ],
      "Next": "TileSweep"
    },
    "TileSweep": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.tile_sweep",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 2, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.TileSweep", "Next": "ToDLQOrContinue"}
      ],
      "Next": "EarlyStopGate"
    },
    "EarlyStopGate": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.metrics.new_unique_rate",
          "NumericLessThan": 0.05,
          "Next": "Finalize"
        },
        {
          "Variable": "$.budget.wall_clock_remaining_seconds",
          "NumericLessThanEquals": 0,
          "Next": "Finalize"
        }
      ],
      "Default": "BudgetGate"
    },
    "BudgetGate": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.budget.tokens_remaining.llm.tokens",
          "NumericLessThan": 1,
          "Next": "Finalize"
        },
        {
          "Variable": "$.budget.tokens_remaining.tavily.api",
          "NumericLessThan": 1,
          "Next": "Finalize"
        }
      ],
      "Default": "WebFetch"
    },
    "WebFetch": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.web_fetch",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 1, "BackoffRate": 2.0, "MaxAttempts": 4}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.WebFetch", "Next": "ToDLQOrContinue"}
      ],
      "Next": "ExtractWithLLM"
    },
    "ExtractWithLLM": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.extracted",
      "Retry": [
        {"ErrorEquals": ["ThrottlingException","ServiceUnavailableException","States.TaskFailed"], "IntervalSeconds": 2, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.ExtractWithLLM", "Next": "ToDLQOrContinue"}
      ],
      "Next": "GeocodeValidate"
    },
    "GeocodeValidate": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.geocoded",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 1, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.GeocodeValidate", "Next": "ToDLQOrContinue"}
      ],
      "Next": "DedupeCanonicalize"
    },
    "DedupeCanonicalize": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.canonical",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 1, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.DedupeCanonicalize", "Next": "ToDLQOrContinue"}
      ],
      "Next": "Persist"
    },
    "Persist": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.persisted",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 1, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.Persist", "Next": "ToDLQOrContinue"}
      ],
      "Next": "Rank"
    },
    "Rank": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:dummy",
      "ResultPath": "$.ranked",
      "Retry": [
        {"ErrorEquals": ["States.ALL"], "IntervalSeconds": 1, "BackoffRate": 2.0, "MaxAttempts": 3}
      ],
      "Catch": [
        {"ErrorEquals": ["States.ALL"], "ResultPath": "$.errors.Rank", "Next": "ToDLQOrContinue"}
      ],
      "Next": "Finalize"
    },
    "ToDLQOrContinue": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.orchestrator.fail_fast",
          "BooleanEquals": true,
          "Next": "SendToDLQ"
        }
      ],
      "Default": "Finalize"
    },
    "SendToDLQ": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "QueueUrl": "arn:aws:sqs:us-east-1:123456789012:dummy-dlq",
        "MessageBody.$": "$"
      },
      "End": true
    },
    "Finalize": {
      "Type": "Pass",
      "End": true
    }
  }
}